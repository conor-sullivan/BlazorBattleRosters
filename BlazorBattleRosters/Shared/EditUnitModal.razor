@using BlazorBattleRosters.Data.Models;
@using Microsoft.Extensions.Logging;
@inject ILogger<EditUnitModal> Logger
@using BlazorBattleRosters.Data.IServices
@inject IRostersService RostersServices

<div class="modal @_modalClass" tabindex="-1" role="dialog" style="display:@_modalDisplay; overflow-y: auto;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>   
            </div>
            <div class="modal-body">
                <div class="form-floating">
                    <InputText class="form-control h-100" id="name" @bind-Value="Model.Name" placeholder="Name"></InputText>
                    <label class="text-dark" for="name">Name</label>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="movement" @bind-Value="Model.Movement" placeholder="Movement Speed"></InputNumber>
                            <label class="text-dark" for="movement">Movement</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="weaponSkill" @bind-Value="Model.WeaponSkill" placeholder="Weapon Skill"></InputNumber>
                            <label class="text-dark" for="weaponSkill">Weapon Skill</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="ballisticSkill" @bind-Value="Model.BallisticSkill" placeholder="Ballistic Skill"></InputNumber>
                            <label class="text-dark" for="ballisticSkill">Ballistic Skill</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="strength" @bind-Value="Model.Strength" placeholder="Strength"></InputNumber>
                            <label class="text-dark" for="strength">Strength</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="toughness" @bind-Value="Model.Toughness" placeholder="Toughness"></InputNumber>
                            <label class="text-dark" for="toughness">Toughness</label>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="wounds" @bind-Value="Model.Wounds" placeholder="Wounds"></InputNumber>
                            <label class="text-dark" for="wounds">Wounds</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="attacks" @bind-Value="Model.Attacks" placeholder="Attacks"></InputNumber>
                            <label class="text-dark" for="attacks">Attacks</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="leadership" @bind-Value="Model.Leadership" placeholder="Leadership"></InputNumber>
                            <label class="text-dark" for="leadership">Leadership</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="save" @bind-Value="Model.SaveRoll" placeholder="Save"></InputNumber>
                            <label class="text-dark" for="save">Save</label>
                        </div>
                    </div>
                    <div class="col-sm">
                        <div class="form-floating">
                            <InputNumber class="form-control" id="pointsValue" @bind-Value="Model.PointsValue" placeholder="Points"></InputNumber>
                            <label class="text-dark" for="pointsValue">Points</label>
                        </div>
                    </div>
                </div>
                <hr />
                <h4>
                    Keywords
                    <button type="submit" disabled style="display: none" aria-hidden="true"></button>
                    <button @onclick="() => AddKeyword(Model)" class="btn btn-sm btn-outline-success"><span class="oi oi-plus"></span></button>
                </h4>
                @if (Model.Keywords != null)
                {
                    <div class="row">
                        @foreach (KeywordsModel keyword in Model.Keywords)
                        {
                            <div class="col-sm">
                                <div class="input-group input-group-sm"> 
                                    <InputText @bind-Value="@keyword.Name" class="form-control" id="keywordName" placeholder="Keyword" aria-describedby="button-keyword-remove" />
                                    <button @onclick="() => Model.Keywords.RemoveAll(k => k.Name == keyword.Name)" class="btn btn-outline-danger" type="button" id="button-keyword-remove">
                                        <span class="oi oi-trash"></span>
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                }
                <hr />
                <h4>
                    <button type="submit" disabled style="display: none" aria-hidden="true"></button>
                    Weapons <button @onclick="() => AddWeapon(Model)" class="btn btn-sm btn-outline-success"><span class="oi oi-plus"></span></button>
                </h4>      
                @if (Model.Weapons != null)
                {
                    @foreach (WeaponModel weapon in Model.Weapons.OrderBy(w => w.Id))
                    {
                        <h5>
                            @weapon.Name         
                            <button type="submit" disabled style="display: none" aria-hidden="true"></button>
                        </h5>
                        <div class="row">
                            <div class="col-sm">
                                <div class="form-floating ">
                                    <InputText @bind-Value="@weapon.Name" class="form-control" id="weaponName" placeholder="Weapon Name" />
                                    <label class="text-dark" for="weaponName">Weapon Name</label>
                                </div>
                            </div>
                                
                            <div class="col-sm">
                                <div class="form-floating ">
                                    <InputText @bind-Value="@weapon.Type" class="form-control" id="weaponType" placeholder="Weapon Type" />
                                    <label class="text-dark" for="weaponType">Weapon Type</label>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm">
                                <div class="form-floating">
                                    <InputNumber @bind-Value="@weapon.Range" type="number" class="form-control" id="range" placeholder="Range" />
                                    <label class="text-dark" for="range">Range</label>
                                </div>
                            </div>
                            <div class="col-sm">
                                <div class="form-floating">
                                    <InputNumber @bind-Value="@weapon.Strength" type="number" class="form-control" id="weaponStrength" placeholder="Strength" />
                                    <label class="text-dark" for="weaponStrength">Strength</label>
                                </div>
                            </div>
                            <div class="col-sm">
                                <div class="form-floating">
                                    <InputNumber @bind-Value="@weapon.ArmorPiercing" type="number" class="form-control" id="ap" placeholder="AP" />
                                    <label class="text-dark" for="ap">AP</label>
                                </div>
                            </div>
                            <div class="col-sm">
                                <div class="form-floating">
                                    <InputNumber @bind-Value="@weapon.Damage" type="number" class="form-control" id="damage" placeholder="Damage" />
                                    <label class="text-dark" for="ap">Damage</label>
                                </div>
                            </div>
                        </div>
                        <br />
                        @if (weapon.Abilities?.Count > 0)
                        {
                            <h6>Weapon Abilities</h6>
                            @foreach (WeaponAbilityModel ability in weapon.Abilities)
                            {
                                <div class="row">
                                    <div class="col-sm">
                                        <div class=" input-group input-group-sm">
                                            <InputText @bind-Value="@ability.Rules" class="form-control" id="rules" placeholder="Weapon Ability" />
                                            <button @onclick="() => weapon.Abilities.RemoveAll(a => a.Rules == ability.Rules)" class="btn btn-outline-danger" type="button" id="button-keyword-remove">
                                                <span class="oi oi-trash"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <br />
                            }
                        }
                        <div class="row g-0">
                            <div class="btn-group">
                                <button @onclick="() => Model.Weapons.RemoveAll(w => w.Name == weapon.Name)" class="btn btn-outline-danger" type="button" id="button-keyword-remove">
                                    <span class="oi oi-trash"></span> Weapon
                                </button>
                                <button @onclick="() => AddWeaponAbility(weapon)" class="btn btn-sm btn-outline-success">
                                    <span class="oi oi-plus"></span> Weapon Ability
                                </button>
                            </div>
                            
                        </div>
                    }
                    <hr />
                    @if (Model.WarGear != null)
                    {
                        <h4>
                            Other WarGear
                            <button type="submit" disabled style="display: none" aria-hidden="true"></button>
                            <button @onclick="() => AddWarGear(Model)" class="btn btn-sm btn-outline-success"><span class="oi oi-plus"></span></button>
                        </h4>       
                        @foreach (WarGearModel wargear in Model.WarGear)
                        {
                            <h5>
                                @wargear.Name
                                
                            </h5>
                            <div class="row">
                                <div class="col-sm">
                                    <div class="form-floating">
                                        <InputText @bind-Value="@wargear.Name" class="form-control" id="warGearName" placeholder="WarGear Name" />
                                        <label class="text-dark" for="warGearName">WarGear Name</label>
                                    </div>
                                </div>
                                <div class="col-sm">
                                    <div class="form-floating">
                                        <InputText @bind-Value="@wargear.Abilities" class="form-control" id="warGearAbility" placeholder="WarGear Ability" />
                                        <label class="text-dark" for="warGearAbility">WarGear Ability</label>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row g-0">
                                <button @onclick="() => Model.WarGear.RemoveAll(w => w.Name == wargear.Name)" class="btn btn-sm btn-outline-danger">
                                    <span class="oi oi-trash"></span> WarGear
                                </button>
                            </div>
                            <br/>
                        }
                    }
                }                   
                @ChildContent
            </div>
        </div>
    </div>
</div>

@if (_showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public UnitModel Model { get; set; } = new UnitModel();

    private string _modalDisplay = "none;";
    private string _modalClass = string.Empty;
    private bool _showBackdrop = false;
    private EditContext? _editContext;
    private string _oldDbUserId = "afee9e21-2c3c-4fda-97e5-6a573e1dbb70";

    private async Task SaveUnit(UnitModel unit)
    {
        try
        {
            await RostersServices.CreateOrUpdateUnit(unit, _oldDbUserId);
            Close();
        }
        catch (Exception)
        {
            
            throw;
        }
    }

    private async Task HandleSubmit()
    {
        if (_editContext != null && _editContext.Validate())
        {
            Logger.LogInformation("HandleSubmit called: Form is valid");

            // Process the valid form
            // await ...
            await Task.CompletedTask;
        }
        else
        {
            Logger.LogInformation("HandleSubmit called: Form is INVALID");
            Console.WriteLine($"Submitted {Model.RosterId}");
        }
    }

    private void AddWeapon(UnitModel model)
    {
        model.Weapons?.Add(new WeaponModel());
    }

    private void AddKeyword(UnitModel model)
    {
        model.Keywords?.Add(new KeywordsModel());
    }

    private void AddWeaponAbility(WeaponModel model)
    {
        model.Abilities?.Add(new WeaponAbilityModel());
    }

    private void AddWarGear(UnitModel model)
    {
        model.WarGear?.Add(new WarGearModel());
    }

    public void Open()
    {
        _modalDisplay = "block";
        _modalClass = "show";
        _showBackdrop = true;
    }

    public void Close()
    {
        _modalDisplay = "none";
        _modalClass = string.Empty;
        _showBackdrop = false;
        Model = new UnitModel();
    }
}
